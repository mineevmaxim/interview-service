apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: coderev-postgres
  namespace: coderev
spec:
  selector:
    matchLabels:
      app: coderev-postgres
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: coderev-postgres
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: coderev-postgres
        image: postgres:15-alpine
        ports:
        - name: postgresql
          containerPort: 5432
          protocol: TCP
        volumeMounts:
        - name: coderev-postgres
          mountPath: /var/lib/postgresql/data
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgresql
        - name: POSTGRES_DB
          value: CodeRev.Database
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
  volumeClaimTemplates:
  - metadata:
      name: coderev-postgres
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "rook-ceph-block"
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: coderev-postgres-service
  namespace: coderev
  labels:
    app: coderev-postgres-service
spec:
  selector:
    app: coderev-postgres
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: coderev-mongodb
  namespace: coderev
spec:
  selector:
    matchLabels:
      app: coderev-mongodb
  serviceName: "coderev-mongodb"
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: coderev-mongodb
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: coderev-mongodb
        image: mongo:4.0.17
        ports:
        - name: mongodb
          containerPort: 27017
          protocol: TCP
        volumeMounts:
        - name: coderev-mongodb
          mountPath: /var/lib/mongodb/data
        env:
        - name: "MONGO_INITDB_DATABASE"
          value: "TrackerDB"
        - name: "MONGO_INITDB_ROOT_USERNAME"
          value: "root"
        - name: "MONGO_INITDB_ROOT_PASSWORD"
          value: "password"
  volumeClaimTemplates:
  - metadata:
      name: coderev-mongodb
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "rook-ceph-block"
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: coderev-mongodb-service
  namespace: coderev
  labels:
    app: coderev-mongodb-service
spec:
  selector:
    app: coderev-mongodb
  ports:
  - port: 27017
    targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: coderev-service
  namespace: coderev
spec:
  selector:
    project: coderev
  ports:
  - name: app-listener
    protocol: TCP
    port: 80
    targetPort: 5001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: coderev-ingress
  namespace: coderev
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    nginx.org/client-max-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.org/websocket-services: "coderev-service"
    nginx.ingress.kubernetes.io/configuration-snippet: |
       proxy_set_header Upgrade "websocket";
       proxy_set_header Connection "Upgrade";
spec:
  ingressClassName: nginx
  rules:
  - host: coderev.stk8s.66bit.ru
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: coderev-service
            port:
              number: 80
